int varA;
bool varB;

struct structDeclA {
    int SDAvarA;
};

struct structDeclA structA;

struct structDeclB {
    int SDBvarA;
    struct structDeclA SDBStructA;
};


struct structDeclC {
    int SDCvarA;
    struct structDeclB SDCStructA;
};


struct structDeclD {
    int SDDvarA;
    struct structDeclC SDDStructA;
    struct structDeclD SDDStructB; // recursive definition 
};

void funcA(int formalAA, bool formalAB) {
    bool formalAA; // no error
    int FAvar1A;
}

int funcB() {
    struct structDeclD FBstruct1A;
    cin >> structA.SDAvarA;
    return FBstruct1A.SDDStructB.SDDStructB.SDDStructA.SDCStructA.SDBStructA.SDAvarA;
}

bool funcC(int formalCA, bool formalCB, int fprmalCC, bool formalCD, int formalCE) {
    int FCvar1A;
    if (varA == 0) {
        bool FCvar2A;
        if (varB && FCvar2A) {
            int FCvar3A;
            repeat(structA.SDAvarA + formalCA + FCvar1A + FCvar2A + FCvar3A> 0) {
                return false;
            }
        } else {
            int FCvar3A;
            while(FCvar3A < 0) {
                bool FCvar4A;
                return funcC(1, true, 3, false, 5); // recursive call
            }
        }
    }
}
