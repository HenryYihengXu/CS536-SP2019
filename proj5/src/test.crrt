int i1;
bool b1;
struct s1 {
    int i2;
    bool b2;
};
struct s2 {
    int i3;
    bool b3;
    struct s1 s1Instance1;
};
struct s3 {
    int i4;
    bool b4;
    struct s2 s2Instance1;
};
struct s4 {
    int i5;
    bool b5;
    struct s3 s3Instance1;
};
struct s1 s1Instance2;
struct s4 s4Instance1;

void voidFunc1() {

}
bool boolFunc1() {
    return false;
}
int intFunc1() {
    return 0;
}

int intFunc2(int i6, bool b6, int i7, bool b7) {
    return i6;
}

void main1() {

    cout << boolFunc1();
    cout << intFunc1();
    cout << i1;
    cout << b1;
    cout << s1Instance2.i2;
    cout << s4Instance1.s3Instance1.s2Instance1.s1Instance1.b2;

    cin >> i1;
    cin >> b1;
    cin >> s1Instance2.i2;
    cin >> s4Instance1.s3Instance1.s2Instance1.s1Instance1.b2;

    voidFunc1();
    intFunc1();
    boolFunc1();

    intFunc2(i1, b1, i1, b1);
    intFunc2(intFunc1(), boolFunc1(), s1Instance2.i2, b1);
}

void main2() {
    int i1;
    int i2;
    bool b1;
    bool b2;

    i1 = -1 + 2 - 3 * 4 / 5;
    i1 = -i1 + intFunc1() + s1Instance2.i2;
    i1++;

    b1 = 1 < 2;
    b1 = 1 > 2;
    b1 = 1 >= 2;
    b1 = i1 <= 2;
    b1 = i1 == 0;
//    b1 = -1 > 3 > "1" >= false <= true;

    b1 = false && true || !b1;
    b1 = b1 = i1 = 3;

    if (b1) {

    }
    if (false && true || !b1 && i1 != 0) {

    } else {

    }
    if (i1 = 0) {

    } else {

    }
    while (b1) {

    }
    while (false && true || !b1 && i1 != 0) {

    }
    while (i1 = 0) {

    }
    repeat (i1) {

    }
    repeat (1 + 3 / -2 * 6 - 3 + s4Instance1.s3Instance1.s2Instance1.s1Instance1.i2) {

    }
    repeat (intFunc1()) {

    }

    i1 = i1;
    i1 = 0;
    i1 = s1Instance2.i2;
    i1 = intFunc1();

    b1 = b1;
    b1 = true;
    b1 = s4Instance1.s3Instance1.s2Instance1.s1Instance1.b2;
    b1 = boolFunc1();

    b1 = 1 == 2;
    b1 = i1 == i1;
    b1 = 1 + 3 == 5 / 4;
    b1 = 2 * -2 == s4Instance1.s3Instance1.s2Instance1.s1Instance1.i2;
    b1 = 2 - -2 == intFunc1();

    b1 = 1 != 2;
    b1 = i1 != i1;
    b1 = 1 + 3 != 5 / 4;
    b1 = 2 * -2 != s4Instance1.s3Instance1.s2Instance1.s1Instance1.i2;
    b1 = 2 - -(-2) != intFunc1();
}
